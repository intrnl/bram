(function(a,b){'object'==typeof exports&&'undefined'!=typeof module?module.exports=b():'function'==typeof define&&define.amd?define(b):a.Bram=b()})(this,function(){'use strict';function a(P,Q){return Array.isArray(P)&&!isNaN(+Q)}function b(P){return Array.isArray(P)||'object'==typeof P}function c(P,Q){var R=new Proxy(P,{get:function(S,T){return p.observe(R,T),S[T]},set:function(S,T,U){var V=S[T];// If the value hasn't changed, nothing else to do
return(!u(U)&&b(U)&&(U=s(U,Q)),S[T]=U,U===V)||(a(S,T)?Q({prop:r,index:+T,type:'set'},U):Q({prop:T,type:'set'},U),!0)},deleteProperty:function(S,T){return a(S,T)&&Q({prop:r,index:+T,type:'delete'}),!0}});return R}function d(P){return P?Object.keys(P).reduce(function(Q,R){var S=P[R];return Q[R]=Array.isArray(S)||'object'==typeof S?s(S):S,Q},P):P}function e(){throw new Error('Not yet implemented')}function f(P,Q={},R){let S=new N(R),T=L(P,S,Q);const U=s(Q,()=>{T.update(U)});return{model:U,fragment:T,update(){T.update(U)}}}function g(P){return'string'==typeof P?document.querySelector(P):P}function h(P){return class extends P{constructor(){super();// Initially an empty object
const Q=this.constructor;this._instance=f(g(Q.template),Object.create(this),this),this.model=this._instance.model,this._hasRendered=!1;let R=Q.events;R&&!Q._hasSetupEvents&&j(Q);let S=!Q._hasInstalledProps&&Q.observedProperties;S&&(Q._hasInstalledProps=!0,k(Q,S,Q.observedAttributes))}connectedCallback(){if(this._instance.update(),this._instance&&!this._hasRendered){let Q=this.constructor.renderMode;'light'===Q?(this.innerHTML='',this.appendChild(this._instance.fragment)):(this.attachShadow({mode:'open'}),this.shadowRoot.appendChild(this._instance.fragment)),this._hasRendered=!0}else if(this._hasRendered);this.childrenConnectedCallback&&(this._disconnectChildMO=l(this))}disconnectedCallback(){this._disconnectChildMO&&this._disconnectChildMO(),this._link&&this._link.detach()}attributeChangedCallback(Q,R,S){var T=this.constructor._syncedAttrs,U=T&&T[Q];U&&this[Q]!==S&&(this[Q]=S)}}}function j(P){P._hasSetupEvents=!0,P.events.forEach(function(Q){Object.defineProperty(P.prototype,'on'+Q,{get:function(){return this['_on'+Q]},set:function(R){var S='_on'+Q,T=this[S];T&&this.removeEventListener(Q,T),this[S]=R,this.addEventListener(Q,R)}})})}function k(P,Q,R=[]){P._syncedAttrs={};var S=P.prototype;Q.forEach(function(T){var U=Object.getOwnPropertyDescriptor(S,T);if(!U){var V=-1!==R.indexOf(T);V&&(P._syncedAttrs[T]=!0),Object.defineProperty(S,T,{get:function(){return this.model[T]},set:function(W){if(this.model[T]=W,V){var X=this.getAttribute(T);'boolean'==typeof W?W&&''!==X?this.setAttribute(T,''):''===X&&!W&&this.removeAttribute(T):X!==W&&this.setAttribute(T,W)}}})}})}function l(P){var Q=!1,R=function(){Q||P.childrenConnectedCallback()},S=new MutationObserver(R);return S.observe(P,{childList:!0}),P.childNodes.length&&n(R),function(){Q=!0,S.disconnect()}}var m='function'==typeof Symbol?Symbol:function(P){return'@@-'+P};const n=Promise.resolve().then.bind(Promise.resolve());class p{static add(P){this.current=P,this.stack.push(P)}static remove(){this.stack.pop(),this.current=this.stack[this.stack.length-1]}static observe(P,Q){this.current&&this.current.stack.push([P,Q])}constructor(){this.stack=[]}start(){p.add(this)}stop(){return p.remove(),this.stack}}p.stack=[];var q=m('bram-events'),r=m('bram-array-change'),s=function(P,Q){return u(P)?P:(P=d(P)||{},Object.defineProperty(P,q,{value:{},enumerable:!1}),c(P,Q))},u=function(P){return P&&!!P[q]};/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http:polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http:polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http:polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http:polymer.github.io/PATENTS.txt
 */class v{}/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http:polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http:polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http:polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http:polymer.github.io/PATENTS.txt
 */const w=/{{/g,x=/}}/g,y=P=>{const Q=[],R=[],S=P.length+1;for(let T=w.lastIndex=x.lastIndex=0;T<S;){const U=w.exec(P);if(null==U){Q.push(P.substring(T,S));break}else{const V=U.index;x.lastIndex=w.lastIndex=V+2;const W=x.exec(P);if(null==W)Q.push(P.substring(T,S));else{const X=W.index;Q.push(P.substring(T,V)),R.push(P.substring(V+2,X)),T=X+2}}}return[Q,R]};/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http:polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http:polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http:polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http:polymer.github.io/PATENTS.txt
 */class z{constructor(P){this.nodeIndex=P}}class A extends z{constructor(P,Q){super(P),this.nodeIndex=P,this.expression=Q}}class B extends z{constructor(P,Q,R,S){super(P),this.nodeIndex=P,this.attributeName=Q,this.strings=R,this.expressions=S}}class C extends A{constructor(P,Q){super(P,Q.getAttribute('expression')||''),this.nodeIndex=P,this.template=Q}}/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http:polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http:polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http:polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http:polymer.github.io/PATENTS.txt
 */// Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null
const D=P=>document.createTreeWalker(P,NodeFilter.SHOW_ELEMENT|NodeFilter.SHOW_TEXT,null,!1);class E{constructor(P){this.template=P,this.parseAndGenerateRules()}cloneContent(){return this.parsedTemplate.content.cloneNode(!0)}parseAndGenerateRules(){const{template:P}=this,Q=P.content.cloneNode(!0),R=[],S=[],T=D(Q);for(let U=-1;T.nextNode();){U++;const V=T.currentNode;if(V.nodeType===Node.ELEMENT_NODE){if(!V.hasAttributes())continue;if(V instanceof HTMLTemplateElement){const{parentNode:W}=V,X=document.createTextNode('');S.push(()=>W.replaceChild(X,V)),R.push(new C(U,V))}else{const{attributes:W}=V;// TODO(cdata): Fix IE/Edge attribute order here
// @see https://github.com/Polymer/lit-html/blob/master/src/lit-html.ts#L220-L229
for(let X=0;X<W.length;){const Y=W[X],{name:Z,value:$}=Y,[_,aa]=y($);if(1===_.length){++X;continue}R.push(new B(U,Z,_,aa)),V.removeAttribute(Z)}}}else if(V.nodeType===Node.TEXT_NODE){const[W,X]=y(V.nodeValue||''),{parentNode:Y}=V,Z=V.ownerDocument;if(1===W.length)continue;for(let $=0;$<X.length;++$){const _=Z.createTextNode(W[$]);// @see https://github.com/Polymer/lit-html/blob/master/src/lit-html.ts#L267-L272
Y.insertBefore(_,V),R.push(new A(U++,X[$]))}V.nodeValue=W[W.length-1]}}// Execute mutations
for(let V of S)V();this.rules=R,this.parsedTemplate=document.createElement('template'),this.parsedTemplate.content.appendChild(Q)}}/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http:polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http:polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http:polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http:polymer.github.io/PATENTS.txt
 */class F{constructor(P,Q){this.templateInstance=P,this.rule=Q}get value(){return this.sourceValue}set value(P){P!==this.sourceValue&&(this.sourceValue=P,this.applyValue(P))}}class G extends F{constructor(P,Q,R){super(P,Q),this.templateInstance=P,this.rule=Q,this.element=R}clear(){this.element.removeAttribute(this.rule.attributeName)}applyValue(P){null==P?P=[]:!Array.isArray(P)&&(P=[P]);const{rule:Q,element:R}=this,{strings:S,attributeName:T}=Q,U=[];for(let W=0;W<S.length-1;++W)U.push(S[W]),U.push(P[W]||'');const V=U.join('');null==V?R.removeAttribute(T):R.setAttribute(T,V)}}class H extends F{constructor(P,Q,R){super(P,Q),this.templateInstance=P,this.rule=Q,this.startNode=R,this.currentNodes=[],this.move(R)}replace(...P){this.clear();for(let Q=0;Q<P.length;++Q){let R=P[Q];// SPECIAL NOTE(cdata): This implementation supports NodeTemplatePart as
// a replacement node. Usefulness TBD.
if('string'==typeof R&&(R=document.createTextNode(R)),R instanceof H){const S=R;R=S.startNode,this.appendNode(R),S.move(R)}else if(R.nodeType===Node.DOCUMENT_FRAGMENT_NODE||R.nodeType===Node.DOCUMENT_NODE)// NOTE(cdata): Apple's proposal explicit forbid's document fragments
// @see https://github.com/w3c/webcomponents/blob/gh-pages/proposals/Template-Instantiation.md
throw new DOMException('InvalidNodeTypeError');else this.appendNode(R)}}/**
     * Forks the current part, inserting a new part after the current one and
     * returning it. The forked part shares the TemplateInstance and the
     * TemplateRule of the current part.
     */fork(){const P=document.createTextNode('');return this.parentNode.insertBefore(P,this.nextSibling),this.nextSibling=P,new H(this.templateInstance,this.rule,P)}/**
     * Creates a new inner part that is enclosed completely by the current
     * part and returns it. The enclosed part shares the TemplateInstance and the
     * TemplateRule of the current part.
     */enclose(){const P=document.createTextNode('');return this.parentNode.insertBefore(P,this.previousSibling.nextSibling),new H(this.templateInstance,this.rule,P)}move(P){const{currentNodes:Q,startNode:R}=this;null!=R&&R!==P&&Q.length&&this.clear(),this.parentNode=P.parentNode,this.previousSibling=P,this.nextSibling=P.nextSibling,this.startNode=P,Q&&Q.length&&this.replace(...Q)}// SPECIAL NOTE(cdata): This clear is specialized a la lit-html to accept a
// starting node from which to clear. This supports efficient cleanup of
// subparts of a part (subparts are also particular to lit-html compared to
// Apple's proposal).
clear(P=this.previousSibling.nextSibling){if(null!==this.parentNode){for(let Q=P;Q!==this.nextSibling;){const R=Q.nextSibling;this.parentNode.removeChild(Q),Q=R}this.currentNodes=[]}}appendNode(P){this.parentNode.insertBefore(P,this.nextSibling),this.currentNodes.push(P)}applyValue(P){1===this.currentNodes.length&&this.currentNodes[0].nodeType===Node.TEXT_NODE?this.currentNodes[0].nodeValue=P:this.replace(document.createTextNode(P))}}class I extends H{constructor(P,Q,R){super(P,Q,R),this.templateInstance=P,this.rule=Q,this.startNode=R}get template(){return this.rule.template}}/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http:polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http:polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http:polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http:polymer.github.io/PATENTS.txt
 */class J extends DocumentFragment{constructor(P,Q,R){super(),this.definition=P,this.processor=Q,this.createdCallbackInvoked=!1,this.previousState=null,this.appendChild(P.cloneContent()),this.generateParts(),this.update(R)}update(P){this.createdCallbackInvoked||(this.processor.createdCallback(this.parts,P),this.createdCallbackInvoked=!0),this.processor.processCallback(this.parts,P),this.previousState=P}generateParts(){const{definition:P}=this,{rules:Q}=P,R=[],S=D(this);let T=-1;for(let U=0;U<Q.length;++U){const V=Q[U],{nodeIndex:W}=V;for(;T<W;)T++,S.nextNode();const X=this.createPart(V,S.currentNode);R.push(X)}this.parts=R}// NOTE(cdata): In the original pass, this was exposed in the
// TemplateProcessor to be optionally overridden so that parts could
// have custom implementations.
createPart(P,Q){if(P instanceof B)return new G(this,P,Q);if(P instanceof C)return new I(this,P,Q);if(P instanceof A)return new H(this,P,Q);throw new Error(`Unknown rule type.`)}}/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http:polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http:polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http:polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http:polymer.github.io/PATENTS.txt
 */const K=new Map,L=function(P,Q,R,S=!1){if(null==Q)throw new Error('The first argument of createInstance must be an implementation of TemplateProcessor');(!K.has(P)||S)&&K.set(P,new E(P));const T=K.get(P);return new J(T,Q,R)};class M extends F{constructor(P,Q,R){super(),Object.assign(this,P),this._state=Q,this._thisValue=R}clear(){e()}applyValue(P){const Q=P.bind(this._thisValue||this._state);this.element.addEventListener('click',Q)}}class N extends v{constructor(P){super(),this._thisValue=P}createdCallback(P,Q){for(let R=P[0],S=0;R;)R instanceof G&&R.rule.attributeName.startsWith('@')&&(P[S]=new M(R,Q,this._thisValue)),S++,R=P[S]}processCallback(P,Q){for(const R of P)if(R instanceof I);else if(R instanceof H){const{expression:S}=R.rule;R.value=Q&&S&&Q[S]}else if(R instanceof G){const{expressions:S}=R.rule;R.value=Q&&S&&S.map(T=>Q&&Q[T])}else if(R instanceof M){const{expressions:S}=R.rule;R.value=Q&&Q[S[0]]}}}const O=h(HTMLElement);return h.Element=O,h.model=s,h.on=function(P,Q,R){var S=P[q];if(S){var T=S[Q];T||(T=S[Q]=[]),T.push(R)}},h.off=function(P,Q,R){var S=P[q];if(S){var T=S[Q];if(T){var U=T.indexOf(R);-1===U||(T.splice(U,1),!T.length&&delete S[Q])}}},h.createInstance=f,h});

